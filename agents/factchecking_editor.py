import json
import os
import logging

from langchain.chat_models import ChatOpenAI
from langchain.prompts import (
    ChatPromptTemplate,
    SystemMessagePromptTemplate,
    HumanMessagePromptTemplate
)
from langchain.chains import LLMChain


class FactCheckingEditor:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—Å—Ç –Ω–∞ —Ñ–∞–∫—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –∏ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä—É–µ—Ç —Å–ø–æ—Ä–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏.
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ—Å—Ç—å, —Å—Ç–∏–ª—å –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏–ª–∏ –æ—Ü–µ–Ω–æ—á–Ω—ã—Ö —Å—É–∂–¥–µ–Ω–∏–π.
    """

    def __init__(self, config_path=None):
        if config_path is None:
            script_dir = os.path.dirname(os.path.realpath(__file__))
            config_path = os.path.join(script_dir, "configs", "factcheck_config.json")

        with open(config_path, "r", encoding="utf-8") as f:
            self.config = json.load(f)

        self.model_name = self.config.get("model_name", "gpt-4")
        self.temperature = self.config.get("temperature", 0.2)
        self.top_p = self.config.get("top_p", 1.0)
        self.presence_penalty = self.config.get("presence_penalty", 0.0)
        self.frequency_penalty = self.config.get("frequency_penalty", 0.0)

        self.strictness_level = self.config.get("strictness_level", 5)
        self.checklist = self.config.get("checklist", [])
        self.rewrite_uncertain = self.config.get("rewrite_uncertain", True)

        self.llm = ChatOpenAI(
            model_name=self.model_name,
            temperature=self.temperature,
            top_p=self.top_p,
            presence_penalty=self.presence_penalty,
            frequency_penalty=self.frequency_penalty
        )

        checklist_items = self.checklist or [
            "–î–∞—Ç—ã –∏ —á–∏—Å–ª–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ",
            "–¢–µ—Ä–º–∏–Ω—ã –∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è",
            "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ —Ñ–∞–∫—Ç—ã",
            "–ü—Ä–∏—á–∏–Ω–Ω–æ-—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–≤—è–∑–∏",
            "–°—Å—ã–ª–∫–∏ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∏"
        ]
        self.checklist_block = "\n".join(f"- {item}" for item in checklist_items)

        self.system_message_template = """
–¢—ã ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–∫—Ç—á–µ–∫–∏–Ω–≥-—Ä–µ–¥–∞–∫—Ç–æ—Ä.

üß† –ó–∞–¥–∞—á–∞:
–ü—Ä–æ–≤–µ—Ä—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∏ –ø–µ—Ä–µ–ø–∏—à–∏ —Å–ø–æ—Ä–Ω—ã–µ, –Ω–µ–ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã–µ –∏–ª–∏ –ø—Ä–µ—É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–µ —Ñ—Ä–∞–∑—ã.

üìå –ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å:
- –ù–µ –¥–æ–±–∞–≤–ª—è–π –ø–æ—è—Å–Ω–µ–Ω–∏–π –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤.
- –ù–µ –ø–∏—à–∏ ¬´–≤—Å—ë –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ¬ª.
- –í–µ—Ä–Ω–∏ —Ç–æ–ª—å–∫–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç ‚Äî –±–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤, —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –ª–∏—à–Ω–∏—Ö –≤–≤–æ–¥–Ω—ã—Ö.
- –°–æ–±–ª—é–¥–∞–π —Å—Ç–∏–ª—å –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ä–∏–≥–∏–Ω–∞–ª–∞.
- –ü–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ, –æ—Å–æ–±–µ–Ω–Ω–æ –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ —Å–æ–º–Ω–∏—Ç–µ–ª—å–Ω—ã.

üîç –°—Ç—Ä–æ–≥–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏: {strictness_level}/10

üìã –ü—Ä–æ–≤–µ—Ä—å –ø–æ —á–µ–∫–ª–∏—Å—Ç—É:
{checklist_block}
"""

        self.human_message_template = """
–í–æ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:

"{text_block}"

–ü—Ä–æ–≤–µ—Ä—å —Ñ–∞–∫—Ç—ã –∏ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π —Å–ø–æ—Ä–Ω—ã–µ –º–µ—Å—Ç–∞.
"""

        self.chat_prompt = ChatPromptTemplate.from_messages([
            SystemMessagePromptTemplate.from_template(self.system_message_template),
            HumanMessagePromptTemplate.from_template(self.human_message_template)
        ])

    def run(self, text: str) -> str:
        logging.info("[FactCheckingEditor] –ó–∞–ø—É—Å–∫ —Ñ–∞–∫—Ç—á–µ–∫–∏–Ω–≥–∞ –∏ —Ä–µ–¥–∞–∫—Ç—É—Ä—ã —Ç–µ–∫—Å—Ç–∞.")

        chain_input = {
            "strictness_level": self.strictness_level,
            "checklist_block": self.checklist_block,
            "text_block": text
        }

        chain = LLMChain(llm=self.llm, prompt=self.chat_prompt)
        return chain.run(chain_input)
