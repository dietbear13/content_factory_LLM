# test_parser.py

import os
import logging
from dotenv import load_dotenv

from tools.parsers.google_parser import parse_google_results
from tools.parsers.article_parser import get_article_html, parse_article_content

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.DEBUG,
    format="%(asctime)s [%(levelname)s] %(message)s"
)

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã
load_dotenv()

def test_parsers(query="–∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç", num_results=5):
    logging.info(f"üîç –ó–∞–ø—Ä–æ—Å –∫ XMLriver: '{query}' (—Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {num_results})")

    try:
        results = parse_google_results(query, limit=num_results)
    except Exception as e:
        logging.exception("‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ parse_google_results()")
        return

    if not results:
        logging.warning("‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –ø–æ–ª—É—á–µ–Ω–æ –æ—Ç XMLriver. –ü—Ä–æ–≤–µ—Ä—å –∫–ª—é—á–∏ –∏–ª–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.")
        return

    print("\nüîó –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–∑ XMLriver:\n")
    for i, item in enumerate(results, 1):
        print(f"{i}. {item['title']}\n   üîó {item['url']}")

    print("\nüì∞ –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏ —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –ø–µ—Ä–≤—É—é —Å—Å—ã–ª–∫—É –∏–∑ —Å–ø–∏—Å–∫–∞...")

    first_url = results[0]['url']
    logging.info(f"üåê –ó–∞–≥—Ä—É–∂–∞–µ–º HTML –ø–æ —Å—Å—ã–ª–∫–µ: {first_url}")

    html = get_article_html(first_url)
    if not html:
        logging.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å HTML. –í–æ–∑–º–æ–∂–Ω–æ, —Å–∞–π—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É.")
        return

    logging.info("‚úÖ HTML —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ...")

    content = parse_article_content(html)
    if not content:
        logging.warning("‚ö†Ô∏è –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –Ω–µ –±—ã–ª–æ –∏–∑–≤–ª–µ—á–µ–Ω–æ (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ–æ–±—ã—á–Ω–∞—è HTML-—Å—Ç—Ä—É–∫—Ç—É—Ä–∞).")
    else:
        print("\nüìÑ –ò–∑–≤–ª–µ—á—ë–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç:\n")
        print(content)


if __name__ == "__main__":
    test_parsers()
